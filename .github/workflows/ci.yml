name: OTR3 CI

on: [push, pull_request]

jobs:
  test-linux:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        go: [ '1.20', '1.19' ]

    name: Test go-${{ matrix.go }} (Linux)
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libgcrypt11-dev libgpg-error-dev
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: install project dependencies
        run: make deps-ci
      - name: run tests
        run: make ci
      - name: coverage
        run: make coveralls
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}

  test-windows:
    runs-on: windows-2019

    name: Test go-1.19 (Windows)
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: install project dependencies
        run: make deps-ci
      - name: run tests
        run: make lint test

  test-osx:
    runs-on: macos-latest

    name: Test go-1.19 (OS X)
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: install project dependencies
        run: make deps-ci
      - name: run tests
        run: make lint test

  notify-test:
    name: Notify on success or failure of test
    needs: [test-linux, test-windows, test-osx]
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: coyim/coyim/.github/actions/ci-conclusion-message@main
        id: message-generator
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          commit_id: ${{ github.sha }}
          commit_message: ${{ github.event.head_commit.message }}
      - name: send message to Matrix on conclusion
        uses: olabiniV2/matrix-message@v0.0.1
        with:
          room_id: ${{ secrets.MATRIX_COYIM_ROOM_ID }}
          access_token: ${{ secrets.MATRIX_ACCESS_TOKEN }}
          server: ${{ secrets.MATRIX_SERVER }}
          subject: ${{ steps.message-generator.outputs.subject }}
          message: ${{ steps.message-generator.outputs.message }}
